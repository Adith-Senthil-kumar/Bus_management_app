rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Admins can create, read, update, and delete bus details
    match /buses/{busId} {
      allow create: if request.auth != null && getUserLevel(request.auth.uid) == 1;
      allow read: if request.auth != null; // All authenticated users can read
      allow update: if request.auth != null && getUserLevel(request.auth.uid) == 1;
      allow delete: if request.auth != null && getUserLevel(request.auth.uid) == 1;
    }
    
    // Admins can create, read, and delete notifications
    match /notifications/{notificationId} {
      allow create: if request.auth != null && getUserLevel(request.auth.uid) == 1;
      allow read: if request.auth != null;
      allow delete: if request.auth != null && getUserLevel(request.auth.uid) == 1;
    }
    
    // Users collection to store roles
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Routes collection rules
    match /routes/{routeId} {
      // Allow creating or updating routes only for authenticated admins
      allow create: if request.auth != null && getUserLevel(request.auth.uid) == 1;
      allow update: if request.auth != null && getUserLevel(request.auth.uid) == 1;

      // Allow reading routes for all authenticated users
      allow read: if request.auth != null;

      // Allow deleting routes only for the user who created the route
      allow delete: if request.auth != null && getUserLevel(request.auth.uid) == 1;  
    }

    // Drivers collection rules
    match /drivers/{driverId} {
      // Only admins can create, update, and delete drivers
      allow create, update, delete: if request.auth != null && getUserLevel(request.auth.uid) == 1;
      // All authenticated users can read driver details
      allow read: if request.auth != null;
    }

    function getUserLevel(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.level;
    }
  }
}